# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  name: default

# set variables
variables:
  username: breakglass
  password: P@ssW0rD!


steps:
#- script: echo Hello, world!
#  displayName: 'Run a one-line script'

#- script: |
#    echo Add other tasks to build, test, and deploy your project.
#    echo See https://aka.ms/yaml
#  displayName: 'Run a multi-line script'

#- task: GetConjurSecret@1
#  inputs:
#    conjurapplianceurl: 'https://dapmaster.cybr.com'
#    conjuraccount: 'cyberark'
#    conjurusername: 'host/pipeline-consumers/agent01'
#    conjurapikey: '$(conjurkey1)'
#    ignoreSsl: true
#    secretsyml: secrets.yml
     

#- script: echo $(SqlServerName) $(SqlToken)


#- powershell: .\helloworld.ps1

# Azure PowerShell to create assset
# Run a PowerShell script within an Azure environment
- task: AzurePowerShell@4
  inputs:
    name: assetcreation
    azureSubscription: azuresubscription
    scriptType: 'FilePath' # Optional. Options: filePath, inlineScript
    scriptPath: $(Build.SourcesDirectory)\deployvirtualmachine.ps1
    #inline: '# You can write your Azure PowerShell scripts inline here. # You can also pass predefined and custom variables to this script using arguments' # Optional
    #scriptArguments: # Optional
    #errorActionPreference: 'stop' # Optional. Options: stop, continue, silentlyContinue
    #failOnStandardError: false # Optional
    azurePowerShellVersion: LatestVersion # Required. Options: latestVersion, otherVersion
    #preferredAzurePowerShellVersion: # Required when azurePowerShellVersion == OtherVersion
    targetpassword: $(password)
   

# run powershell to onboard 
#- powershell: .\onboardasset.ps1
  
- task: PowerShell@2
  inputs:
    filePath: '.\onboardasset.ps1'
    arguments: '$(assetcreation.myPublicIpAddress)' 